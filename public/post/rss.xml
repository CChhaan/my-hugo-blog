<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 拾光博客 - 永浩</title><link>//localhost:1313/post/</link><description>Recent content in Posts on 拾光博客 - 永浩</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Wed, 10 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1313/post/rss.xml" rel="self" type="application/rss+xml"/><item><title>3.1 真值的计算</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0301--%E7%9C%9F%E5%80%BC%E7%9A%84%E8%AE%A1%E7%AE%97/</link><pubDate>Wed, 10 Sep 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0301--%E7%9C%9F%E5%80%BC%E7%9A%84%E8%AE%A1%E7%AE%97/</guid><description>本节详细介绍了真值的计算方法，包括真值表分析法（含环线方法）和表列方法（无环线的真值表分析），并阐述了这两种方法的操作步骤和关键特点。</description></item><item><title>3.2 重言句、矛盾句和偶真句</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0302--%E9%87%8D%E8%A8%80%E5%8F%A5%E7%9F%9B%E7%9B%BE%E5%8F%A5%E5%92%8C%E5%81%B6%E7%9C%9F%E5%8F%A5/</link><pubDate>Wed, 10 Sep 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0302--%E9%87%8D%E8%A8%80%E5%8F%A5%E7%9F%9B%E7%9B%BE%E5%8F%A5%E5%92%8C%E5%81%B6%E7%9C%9F%E5%8F%A5/</guid><description>本节详细介绍了真值表的核心概念、构建步骤以及其在论证有效性判定和哲学关联方面的应用。</description></item><item><title>2.13 - 2.14 复杂语句符号化</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0205-%E5%A4%8D%E6%9D%82%E8%AF%AD%E5%8F%A5%E7%AC%A6%E5%8F%B7%E5%8C%96/</link><pubDate>Sat, 06 Sep 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0205-%E5%A4%8D%E6%9D%82%E8%AF%AD%E5%8F%A5%E7%AC%A6%E5%8F%B7%E5%8C%96/</guid><description>本节详细介绍了复杂语句符号化的方法，包括主联结词定位、否定词辖域、分而治之方法以及语境校验等关键步骤，帮助读者掌握符号化技巧。</description></item><item><title>2.10 - 2.12 条件句</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0204-%E6%9D%A1%E4%BB%B6%E5%8F%A5/</link><pubDate>Fri, 05 Sep 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0204-%E6%9D%A1%E4%BB%B6%E5%8F%A5/</guid><description>本节详细介绍了条件句的逻辑含义、符号化方法以及真值规则，并对比了实质条件句与日常条件句、实质双条件句与日常等值句的差异。</description></item><item><title>2.8 - 2.9 析取</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0203-%E6%9E%90%E5%8F%96/</link><pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0203-%E6%9E%90%E5%8F%96/</guid><description>本节详细介绍了析取句的定义、真值规则、不可兼析取的符号化问题、多算子语句的符号化与辖域等内容。</description></item><item><title>2.4 - 2.7 否定</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0202-%E5%90%A6%E5%AE%9A/</link><pubDate>Mon, 01 Sep 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0202-%E5%90%A6%E5%AE%9A/</guid><description>本节详细介绍了否定算子及其在逻辑表达式中的使用，包括否定算子的核心性质、真值规则、括号的作用以及算子辖域的概念。通过这些内容，读者可以更好地理解否定算子在逻辑表达式中的功能和作用。</description></item><item><title>2.1 - 2.3 合取</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0201%E5%90%88%E5%8F%96/</link><pubDate>Sun, 31 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0201%E5%90%88%E5%8F%96/</guid><description>本节详细介绍了逻辑学中的语句逻辑、原子语句、复合语句、合取句等概念，并讲解了合取句的真值规则和日常语句与逻辑符号化的注意事项。</description></item><item><title>1.5 - 1.9 论证的本质</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0103-%E8%AE%BA%E8%AF%81%E7%9A%84%E6%80%A7%E8%B4%A8/</link><pubDate>Sat, 30 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0103-%E8%AE%BA%E8%AF%81%E7%9A%84%E6%80%A7%E8%B4%A8/</guid><description>本节详细介绍了论证的本质，包括有效论证、可靠论证与坏论证的关系，陈述集的相容性与不相容性，有效性与相容性的关联，以及发现语境与辩护语境。</description></item><item><title>1.2 - 1.4 演绎与归纳</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0102-%E6%BC%94%E7%BB%8E%E4%B8%8E%E5%BD%92%E7%BA%B3/</link><pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0102-%E6%BC%94%E7%BB%8E%E4%B8%8E%E5%BD%92%E7%BA%B3/</guid><description>本节详细介绍了演绎与归纳论证的基本概念、逻辑性质、有效性特征、归纳强度的特征以及演绎与归纳论证对普通生活的意义。</description></item><item><title>1.1 论证的要素</title><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0101-%E8%AE%BA%E8%AF%81%E7%9A%84%E8%A6%81%E7%B4%A0/</link><pubDate>Wed, 27 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/0101-%E8%AE%BA%E8%AF%81%E7%9A%84%E8%A6%81%E7%B4%A0/</guid><description>本节详细介绍了论证的核心定义、要素、关键特征以及论证与非论证的区分，并阐述了区分二者的重要意义。</description></item><item><title>附录 JS库</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/%E9%99%84%E5%BD%95-js%E5%BA%93/</link><pubDate>Sun, 24 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/%E9%99%84%E5%BD%95-js%E5%BA%93/</guid><description>本章详细介绍了 JavaScript 库的核心概念、优缺点、选择标准以及如何利用 CDN 加速库的加载。通过分析库的核心优势与潜在问题，为开发者提供了选择合适库的指导原则。同时，本章还介绍了如何利用 CDN 来加速 JavaScript 库的共享和加载，以提高前端开发的效率。</description></item><item><title>第十章 用JS实现动画效果</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/10--%E7%94%A8js%E5%AE%9E%E7%8E%B0%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</link><pubDate>Sat, 23 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/10--%E7%94%A8js%E5%AE%9E%E7%8E%B0%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</guid><description>本章详细介绍了 JavaScript 动画实现的核心原理，包括元素位置控制、时间调度和数值处理等关键知识点。通过这些原理，读者可以更好地理解动画的实现过程，并能够编写出更加流畅和逼真的动画效果。</description></item><item><title>第八章 充实的文档的内容</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/08--%E5%85%85%E5%AE%9E%E7%9A%84%E6%96%87%E6%A1%A3%E7%9A%84%E5%86%85%E5%AE%B9/</link><pubDate>Tue, 19 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/08--%E5%85%85%E5%AE%9E%E7%9A%84%E6%96%87%E6%A1%A3%E7%9A%84%E5%86%85%E5%AE%B9/</guid><description>本章详细介绍了 HTML 语义化标签、DOCTYPE、浏览器渲染模式、可访问性设计、文本节点、&lt;code>&amp;lt;abbr&amp;gt;&lt;/code> 标签等概念，帮助读者更好地理解和使用 HTML。</description></item><item><title>第九章 CSS DOM</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/09--css-dom/</link><pubDate>Tue, 19 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/09--css-dom/</guid><description>本章详细介绍了网页的三层结构，以及如何通过 DOM 操作样式，包括 &lt;code>style&lt;/code> 属性和 &lt;code>className&lt;/code> 属性的使用。通过这些操作，开发者可以更灵活地控制网页的样式，实现更丰富的交互效果。</description></item><item><title>第七章 动态创建标记</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/07--%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E6%A0%87%E8%AE%B0/</link><pubDate>Mon, 18 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/07--%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E6%A0%87%E8%AE%B0/</guid><description>本章详细介绍了 DOM 节点操作、XMLHttpRequest 对象、AJAX 技术的基本使用方法，以及如何通过这些技术动态创建和插入标记。</description></item><item><title>第六章 案例研究：图片库改进版</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/06--%E6%A1%88%E4%BE%8B%E7%A0%94%E7%A9%B6%E5%9B%BE%E7%89%87%E5%BA%93%E6%94%B9%E8%BF%9B%E7%89%88/</link><pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/06--%E6%A1%88%E4%BE%8B%E7%A0%94%E7%A9%B6%E5%9B%BE%E7%89%87%E5%BA%93%E6%94%B9%E8%BF%9B%E7%89%88/</guid><description>本章详细介绍了 JavaScript 代码规范、结构解耦、NodeList、addLoadEvent、nodeName、键盘事件和交互一致性等概念。</description></item><item><title>第四章 案例研究：JS图片库</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/04-%E6%A1%88%E4%BE%8B%E7%A0%94%E7%A9%B6js%E5%9B%BE%E7%89%87%E5%BA%93/</link><pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/04-%E6%A1%88%E4%BE%8B%E7%A0%94%E7%A9%B6js%E5%9B%BE%E7%89%87%E5%BA%93/</guid><description>本章详细介绍了 DOM 节点操作中的元素属性操作、JS 文件优化、事件处理函数以及节点遍历等内容。</description></item><item><title>第五章 最佳实践</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/05--%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/05--%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>本章详细介绍了 JavaScript 在实际开发中的最佳实践，包括平稳退化、分离 JavaScript、向后兼容等方面，帮助读者提高代码质量和可维护性。</description></item><item><title>第二章 JS语法</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/02-js%E8%AF%AD%E6%B3%95/</link><pubDate>Sat, 16 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/02-js%E8%AF%AD%E6%B3%95/</guid><description>本章详细介绍了 JavaScript 的基础语法，包括变量与数据类型、条件语句、循环语句、函数基础、对象基础、变量作用域等内容。</description></item><item><title>第三章 DOM</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/03--dom/</link><pubDate>Sat, 16 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/03--dom/</guid><description>本章详细介绍了 DOM 的核心概念、节点类型、CSS 与 DOM 的关联以及获取元素节点的 DOM 方法，为后续的 DOM 操作打下了基础。</description></item><item><title>第一章 JS简史</title><link>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/01--js%E7%AE%80%E5%8F%B2/</link><pubDate>Sat, 16 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js-dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/01--js%E7%AE%80%E5%8F%B2/</guid><description>本章章详细介绍了 DOM、DHTML 和 API 的概念，以及它们在前端开发中的重要性。</description></item><item><title>4.3节 Promise</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0405--%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD/</link><pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0405--%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD/</guid><description>本文详细介绍了 Web Worker 的基础概念、通信机制、运行环境、数据传递方式以及共享 Worker 的定义与创建，并对比了专用 Worker 和共享 Worker 的通信差异。</description></item><item><title>4.4节 生成器</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0404--%E7%94%9F%E6%88%90%E5%99%A8/</link><pubDate>Wed, 13 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0404--%E7%94%9F%E6%88%90%E5%99%A8/</guid><description>本文详解JavaScript生成器概念、特性及异步应用，展示其如何简化异步流程，实现同步写法与异步执行。</description></item><item><title>4.3节 Promise</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0403--promise/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0403--promise/</guid><description>本节详细介绍了 Promise 的核心概念、分类、鸭子类型、信任问题、链式流和模式，帮助读者深入理解 Promise 的原理和用法。</description></item><item><title>4.1节 异步：现在与将来</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0401--%E5%BC%82%E6%AD%A5%E7%8E%B0%E5%9C%A8%E4%B8%8E%E5%B0%86%E6%9D%A5/</link><pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0401--%E5%BC%82%E6%AD%A5%E7%8E%B0%E5%9C%A8%E4%B8%8E%E5%B0%86%E6%9D%A5/</guid><description>本节详细介绍了 JavaScript 中的异步编程概念，包括事件循环、任务队列、宏任务和微任务等，以及如何通过并发协调实现代码的异步执行。</description></item><item><title>4.2节 回调</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0402--%E5%9B%9E%E8%B0%83/</link><pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0402--%E5%9B%9E%E8%B0%83/</guid><description>本节详细介绍了回调函数的本质、回调地狱的成因、回调模式的优化设计以及回调调用的最佳实践。</description></item><item><title>3.5节 语法</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0305--%E8%AF%AD%E6%B3%95/</link><pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0305--%E8%AF%AD%E6%B3%95/</guid><description>本节详细介绍了 JavaScript 语句与表达式的基本概念、表达式的副作用、上下文规则、运算符优先级与短路等内容。</description></item><item><title>附录 混合环境JS</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/%E9%99%84%E5%BD%95-%E6%B7%B7%E5%90%88%E7%8E%AF%E5%A2%83js/</link><pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/%E9%99%84%E5%BD%95-%E6%B7%B7%E5%90%88%E7%8E%AF%E5%A2%83js/</guid><description>本节详细介绍了 Annex B 规范、宿主对象、全局 DOM 对象、原生原型扩展的注意事项、script 标签与代码加载等内容，帮助读者更好地理解混合环境下的 JS 代码。</description></item><item><title>第十章 远程共同协作</title><link>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/10--%E8%BF%9C%E7%A8%8B%E5%85%B1%E5%90%8C%E5%8D%8F%E4%BD%9C/</link><pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/10--%E8%BF%9C%E7%A8%8B%E5%85%B1%E5%90%8C%E5%8D%8F%E4%BD%9C/</guid><description>本章介绍了如何将本地仓库的内容推送到 GitHub 远端仓库，以及如何从 GitHub 拉取更新。同时，还介绍了推送失败的原因及解决方法，以及如何从服务器克隆仓库。此外，还介绍了如何使用 Pull Request 进行协作开发，以及如何使用 GitHub Pages 部署静态网站。</description></item><item><title>09- 类</title><link>//localhost:1313/post/ts/09--%E7%B1%BB/</link><pubDate>Fri, 25 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/09--%E7%B1%BB/</guid><description>本节详细介绍了 TypeScript 中类的定义、继承、访问修饰符、抽象类等概念，帮助读者更好地理解和使用 TypeScript 的面向对象编程。</description></item><item><title>06- 泛型</title><link>//localhost:1313/post/ts/06--%E6%B3%9B%E5%9E%8B/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/06--%E6%B3%9B%E5%9E%8B/</guid><description>本节详细介绍了 TypeScript 中的泛型机制，包括类型变量、泛型函数、泛型类、类型约束等概念，帮助读者更好地理解和使用 TypeScript 的泛型功能。</description></item><item><title>07- 类型运算符</title><link>//localhost:1313/post/ts/07--%E7%B1%BB%E5%9E%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/07--%E7%B1%BB%E5%9E%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</guid><description>本节主要介绍 TypeScript 中的类型运算符，包括 &lt;code>keyof&lt;/code>、&lt;code>typeof&lt;/code> 和索引访问类型，以及它们在类型查询和类型推导中的应用。</description></item><item><title>08- 条件类型</title><link>//localhost:1313/post/ts/08--%E6%9D%A1%E4%BB%B6%E7%B1%BB%E5%9E%8B/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/08--%E6%9D%A1%E4%BB%B6%E7%B1%BB%E5%9E%8B/</guid><description>本节主要介绍条件类型，包括基本用法、与泛型结合、类型推断与 infer、对联合类型的分布性以及内置条件类型。</description></item><item><title>第九章 其他常见的情况及冷知识</title><link>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/09--%E5%85%B6%E4%BB%96%E5%B8%B8%E8%A7%81%E7%9A%84%E6%83%85%E5%86%B5%E5%8F%8A%E5%86%B7%E7%9F%A5%E8%AF%86/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/09--%E5%85%B6%E4%BB%96%E5%B8%B8%E8%A7%81%E7%9A%84%E6%83%85%E5%86%B5%E5%8F%8A%E5%86%B7%E7%9F%A5%E8%AF%86/</guid><description>本章介绍了一些在 Git 使用过程中可能遇到的其他常见情况及冷知识，包括如何临时保存工作区修改、移除 Git 历史中的敏感信息、合并其他分支的特定提交、清理 Git 历史等。</description></item><item><title>05- 对象类型</title><link>//localhost:1313/post/ts/05--%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/05--%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/</guid><description>本节详细介绍了 TypeScript 中对象类型的基本定义、属性特性、索引签名、交叉类型、泛型对象、ReadonlyArray 和元组类型等概念，帮助读者深入理解 TypeScript 的对象类型系统。</description></item><item><title>第八章和第十一章 标签和gitflow</title><link>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/0811--%E6%A0%87%E7%AD%BE%E5%92%8Cgitflow/</link><pubDate>Tue, 22 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/0811--%E6%A0%87%E7%AD%BE%E5%92%8Cgitflow/</guid><description>本章介绍了 Git 标签和 Git Flow 分支模型的相关知识，包括标签的概念、类型、使用方法以及 Git Flow 的分支类型和功能。通过学习本章，读者可以掌握如何使用 Git 标签来标记项目版本，以及如何通过 Git Flow 分支模型来规范团队协作流程。</description></item><item><title>03- 类型缩小</title><link>//localhost:1313/post/ts/03--%E7%B1%BB%E5%9E%8B%E7%BC%A9%E5%B0%8F/</link><pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/03--%E7%B1%BB%E5%9E%8B%E7%BC%A9%E5%B0%8F/</guid><description>本节介绍了 TypeScript 中的类型缩小，包括基于 typeof、真值检查、相等性检查、in 运算符、instanceof、赋值、用户定义的类型保护、可区分的联合和 never 类型等方法，以及这些方法的使用场景和示例。</description></item><item><title>04- 更多关于函数</title><link>//localhost:1313/post/ts/04--%E6%9B%B4%E5%A4%9A%E5%85%B3%E4%BA%8E%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/04--%E6%9B%B4%E5%A4%9A%E5%85%B3%E4%BA%8E%E5%87%BD%E6%95%B0/</guid><description>本节介绍函数类型表达式、带属性的函数与调用签名、构造函数与构造签名、泛型函数、函数重载等。</description></item><item><title>02- 日常类型</title><link>//localhost:1313/post/ts/02--%E6%97%A5%E5%B8%B8%E7%B1%BB%E5%9E%8B/</link><pubDate>Fri, 18 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/02--%E6%97%A5%E5%B8%B8%E7%B1%BB%E5%9E%8B/</guid><description>本节介绍 TypeScript 的基础类型、类型别名、接口、联合类型、类型断言、枚举等概念，帮助读者理解 TypeScript 的类型系统。</description></item><item><title>01-ts</title><link>//localhost:1313/post/ts/01--ts/</link><pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/01--ts/</guid><description>本节介绍了 TypeScript 的基础概念，包括静态类型检查、TypeScript 与 JavaScript 的关系、TypeScript 的核心优势、TypeScript 的类型推断与扩展、TypeScript 的类型系统以及类型定义语法等。</description></item><item><title>第七章 修改历史记录</title><link>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/07--%E4%BF%AE%E6%94%B9%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/07--%E4%BF%AE%E6%94%B9%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid><description>介绍 Git 中修改历史记录的方法，包括 rebase、reset、revert 等指令的使用，以及如何合并、拆解、调整 commit 等。</description></item><item><title>第六章 使用分支</title><link>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/06--%E4%BD%BF%E7%94%A8%E5%88%86%E6%94%AF/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/06--%E4%BD%BF%E7%94%A8%E5%88%86%E6%94%AF/</guid><description>本章介绍了 Git 分支的基本操作，包括创建、切换、合并、删除分支等，以及分支合并的原理和 rebase 的使用方法。</description></item><item><title>3.4节 强制类型转换</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0304--%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link><pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0304--%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid><description>本节详细介绍了 JavaScript 中的强制类型转换，包括显式转换和隐式转换，以及抽象值操作（ToString、ToNumber、ToBoolean）等概念。通过这些内容，读者可以更好地理解 JavaScript 中的类型转换规则，并掌握如何进行显式和隐式转换。</description></item><item><title>第五章 开始使用git</title><link>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/05--%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8git/</link><pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/05--%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8git/</guid><description>本文主要介绍如何开始使用 Git，包括初始化 Repository、把文件交给 Git 管控、查看记录、删除文件或变更文件名以及修改 commit 记录等操作。</description></item><item><title>3.1节 类型</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0301--%E7%B1%BB%E5%9E%8B/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0301--%E7%B1%BB%E5%9E%8B/</guid><description>本节详细介绍了 JavaScript 的基本类型和对象类型，以及 typeof 运算符的使用和注意事项，帮助读者更好地理解 JavaScript 的类型系统。</description></item><item><title>3.2节 值</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0302--%E5%80%BC/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0302--%E5%80%BC/</guid><description>本节详细介绍了 JavaScript 中不同类型的值，包括数组、字符串、数字和特殊数值，以及它们的一些特性和操作方法。同时，还讨论了值与引用的区别，以及如何处理类数组和浮点数精度问题。</description></item><item><title>3.3节 原生函数</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0303--%E5%8E%9F%E7%94%9F%E5%87%BD%E6%95%B0/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0303--%E5%8E%9F%E7%94%9F%E5%87%BD%E6%95%B0/</guid><description>本节详细介绍了 JavaScript 中原生函数的概念、分类、封装对象、原型以及 Symbol 和 Error 对象的使用方法。</description></item><item><title>第一 ~ 四章 初步使用git</title><link>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/01-04--%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8git/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/git%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/01-04--%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8git/</guid><description>本文详细介绍了 Git 这一分布式版本控制系统的优点，对比了 Windows 与 macOS/Linux 系统下的常用命令，讲解了 vim 操作模式及常用命令，还阐述了 Git 的基本配置、特定项目配置和命令缩写设置等内容。</description></item><item><title>2.4节 原型</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0204--%E5%8E%9F%E5%9E%8B/</link><pubDate>Sat, 14 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0204--%E5%8E%9F%E5%9E%8B/</guid><description>本节详细介绍了 JavaScript 中原型链的概念和原理，包括原型链的构建、原型链的查找过程、原型链的终点以及属性设置与屏蔽等内容。</description></item><item><title>2.5节 行为委托和class</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0205--%E8%A1%8C%E4%B8%BA%E5%A7%94%E6%89%98%E5%92%8Cclass/</link><pubDate>Sat, 14 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0205--%E8%A1%8C%E4%B8%BA%E5%A7%94%E6%89%98%E5%92%8Cclass/</guid><description>本节详细介绍了对象关联风格的核心特性与设计原则，包括状态存储原则、方法命名原则、委托本质、委托限制和思维模型与灵活性。同时，还介绍了 class 语法特点，包括多态实现、声明限制、扩展能力和本质与局限性。</description></item><item><title>2.3节 混合对象类</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0203--%E6%B7%B7%E5%90%88%E5%AF%B9%E8%B1%A1%E7%B1%BB/</link><pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0203--%E6%B7%B7%E5%90%88%E5%AF%B9%E8%B1%A1%E7%B1%BB/</guid><description>本节详细介绍了类理论的核心概念、类的机制、类的继承以及 JavaScript 中的特殊性，帮助读者更好地理解 JavaScript 中的类和对象。</description></item><item><title>2.2节 对象</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0202--%E5%AF%B9%E8%B1%A1/</link><pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0202--%E5%AF%B9%E8%B1%A1/</guid><description>本节详细介绍了 JavaScript 对象的定义形式、分类、属性访问方式、数组特性、对象复制等内容，帮助读者更好地理解和使用 JavaScript 对象。</description></item><item><title>2.1节 this</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0201--this/</link><pubDate>Wed, 04 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0201--this/</guid><description>本节详细介绍了 JavaScript 中 this 的绑定规则，包括默认绑定、隐式绑定、显式绑定、new 绑定以及优先级判断。同时，还介绍了箭头函数 this 的特点以及词法 this 的使用。</description></item><item><title>附录 作用域</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/%E9%99%84%E5%BD%95-%E4%BD%9C%E7%94%A8%E5%9F%9F/</link><pubDate>Tue, 03 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/%E9%99%84%E5%BD%95-%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid><description>本节详细介绍了 JavaScript 中作用域的概念，包括动态作用域和词法作用域的区别，以及块作用域的替代方案。此外，还介绍了箭头函数的&lt;code>this&lt;/code>绑定特性，以及如何用&lt;code>catch&lt;/code>分句实现块作用域。</description></item><item><title>1.4节 提升</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0104--%E6%8F%90%E5%8D%87/</link><pubDate>Mon, 02 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0104--%E6%8F%90%E5%8D%87/</guid><description>本节详细介绍了 JavaScript 中变量和函数声明的提升机制，包括提升的本质、分类、优先级、特殊情况及注意事项。通过学习这些内容，读者可以更好地理解 JavaScript 代码的执行顺序和作用域规则。</description></item><item><title>1.5节 作用域闭包</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0105--%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AD%E5%8C%85/</link><pubDate>Mon, 02 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0105--%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AD%E5%8C%85/</guid><description>本节详细介绍了闭包的概念、分类、循环与闭包问题、模块模式等内容，帮助读者深入理解闭包的原理和应用。</description></item><item><title>1.2节 词法作用域</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0102--%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F/</link><pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0102--%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid><description>本节详细介绍了 JavaScript 中词法作用域的概念、核心特性、分类以及欺骗词法作用域的方式和风险，帮助读者更好地理解 JavaScript 的作用域机制。</description></item><item><title>1.3节 函数作用域和块作用域</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0103--%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E5%9D%97%E4%BD%9C%E7%94%A8%E5%9F%9F/</link><pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0103--%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E5%9D%97%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid><description>本节详细介绍了 JavaScript 中的函数作用域和块作用域，包括函数作用域的核心特性、函数声明与表达式的区别、立即执行函数表达式（IIFE）的用途和块作用域的特性与实现。</description></item><item><title>1.1节 作用域是什么</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0101--%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%98%AF%E4%BB%80%E4%B9%88/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%8A%E5%8D%B7/0101--%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%98%AF%E4%BB%80%E4%B9%88/</guid><description>本节详细介绍了 JavaScript 中的作用域概念，包括作用域的本质、编译原理、作用域的核心角色、变量声明与赋值过程、LHS 与 RHS 查询、作用域嵌套以及异常类型及触发场景等内容。</description></item><item><title>2.12 组件基础</title><link>//localhost:1313/post/vue3/0212-%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0212-%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</guid><description>本节详细介绍了 Vue 组件的基础概念、定义方式、注册方式、通信机制以及动态组件和缓存等高级特性，帮助读者全面掌握 Vue 组件开发。</description></item><item><title>3.1 组件注册</title><link>//localhost:1313/post/vue3/0301-%E7%BB%84%E4%BB%B6%E6%B3%A8%E5%86%8C/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0301-%E7%BB%84%E4%BB%B6%E6%B3%A8%E5%86%8C/</guid><description>本节详细介绍了 Vue 组件注册的两种方式：全局注册和局部注册，以及组件名规范和 Tree-Shaking 支持。</description></item><item><title>3.2 props</title><link>//localhost:1313/post/vue3/0302-props/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0302-props/</guid><description>本节详细介绍了 Vue 3 中组件间传递数据的核心机制 Props，包括声明方式、传递方式、命名规范、单向数据流、校验配置和响应式处理等。通过本节的学习，读者将掌握如何在 Vue 3 中高效地使用 Props 进行组件间通信。</description></item><item><title>3.3 组件事件</title><link>//localhost:1313/post/vue3/0303-%E7%BB%84%E4%BB%B6%E4%BA%8B%E4%BB%B6/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0303-%E7%BB%84%E4%BB%B6%E4%BA%8B%E4%BB%B6/</guid><description>本节详细介绍了 Vue 3 中组件事件的使用方法，包括如何在子组件中触发事件、在父组件中监听事件，以及如何传递参数和进行类型校验。通过示例代码，展示了如何使用 &lt;code>defineEmits&lt;/code> 宏声明事件、在模板中触发事件、在父组件中监听事件并处理参数。</description></item><item><title>2.10 侦听器</title><link>//localhost:1313/post/vue3/0210-%E4%BE%A6%E5%90%AC%E5%99%A8/</link><pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0210-%E4%BE%A6%E5%90%AC%E5%99%A8/</guid><description>本节详细介绍了 Vue 3 组合式 API 中的侦听器，包括 &lt;code>watch&lt;/code> 和 &lt;code>watchEffect&lt;/code> 的用法、副作用清理、侦听器停止等，帮助开发者更好地控制响应式状态变化。</description></item><item><title>2.11 模板引用</title><link>//localhost:1313/post/vue3/0211-%E6%A8%A1%E6%9D%BF%E5%BC%95%E7%94%A8/</link><pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0211-%E6%A8%A1%E6%9D%BF%E5%BC%95%E7%94%A8/</guid><description>本节详细介绍了 Vue 3 中模板引用的使用方法，包括访问 DOM 元素和子组件实例，以及注意事项。通过模板引用，开发者可以直接操作 DOM 或调用子组件方法，解决声明式渲染无法覆盖的场景。</description></item><item><title>2.6 条件渲染</title><link>//localhost:1313/post/vue3/0206-%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93/</link><pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0206-%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93/</guid><description>本节主要介绍了 Vue 中的条件渲染指令，包括 v-if、v-else、v-else-if、v-show 以及它们之间的差异和适用场景。</description></item><item><title>2.7 列表渲染</title><link>//localhost:1313/post/vue3/0207-%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93/</link><pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0207-%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93/</guid><description>本节详细介绍了 Vue 3 中列表渲染的用法，包括 v-for 的基础用法、key 属性优化、v-for 与 v-if 的优先级以及响应式列表更新。</description></item><item><title>2.8 事件处理</title><link>//localhost:1313/post/vue3/0208-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</link><pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0208-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</guid><description>本节详细介绍了 Vue 3 中事件处理的相关内容，包括 v-on 指令的使用、事件修饰符的简化操作以及按键修饰符和系统组合键的监听。</description></item><item><title>2.9 表单输入绑定</title><link>//localhost:1313/post/vue3/0209-%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A/</link><pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0209-%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A/</guid><description>本节详细介绍了 Vue 3 中表单输入绑定的核心概念、用法和原理，包括 v-model 的自动映射规则、表单元素类型适配、初始值处理、IME 输入适配、textarea 禁用插值等关键点，以及文本类输入、复选框、单选框、下拉选择等常见表单元素的 v-model 用法。</description></item><item><title>2.1 创建一个vue应用</title><link>//localhost:1313/post/vue3/0201-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAvue%E5%BA%94%E7%94%A8/</link><pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0201-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAvue%E5%BA%94%E7%94%A8/</guid><description>本节详细介绍了如何创建一个 Vue 应用实例，包括基本创建方式、应用实例的挂载、应用实例的配置、应用实例的资源注册以及多应用实例的创建。</description></item><item><title>2.2 模板语法</title><link>//localhost:1313/post/vue3/0202-%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/</link><pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0202-%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/</guid><description>本节详细介绍了 Vue 模板语法中的数据绑定与指令，包括文本插值、HTML 插值、Attribute 绑定等基础用法，以及动态参数和模板表达式规则。通过这些内容，读者可以全面了解 Vue 模板语法的核心特性及其使用方法。</description></item><item><title>2.3 响应式基础</title><link>//localhost:1313/post/vue3/0203-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0203-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%9F%BA%E7%A1%80/</guid><description>本节介绍 Vue 3 的响应式 API，包括 &lt;code>ref()&lt;/code> 和 &lt;code>reactive()&lt;/code> 的基本用法和特性。</description></item><item><title>2.4 计算属性</title><link>//localhost:1313/post/vue3/0204-%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/</link><pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0204-%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/</guid><description>本节介绍 Vue 3 中计算属性（computed）的基本用法、核心作用、响应式依赖追踪、缓存机制以及可写计算属性等。</description></item><item><title>2.5 类与样式绑定</title><link>//localhost:1313/post/vue3/0205-%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A/</link><pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/0205-%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A/</guid><description>本节介绍 Vue 3 中动态绑定 Class 和 Style 的方法，包括对象、数组、计算属性等。</description></item><item><title>1 简介</title><link>//localhost:1313/post/vue3/01--%E7%AE%80%E4%BB%8B/</link><pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/vue3/01--%E7%AE%80%E4%BB%8B/</guid><description>本节介绍了 Vue 框架基础、声明式渲染、响应性、单文件组件 (SFC)、选项式 API、组合式 API 等概念，并给出了选择建议。</description></item><item><title>3.1 语法</title><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0301-%E8%AF%AD%E6%B3%95/</link><pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0301-%E8%AF%AD%E6%B3%95/</guid><description>本章详细介绍了 ECMAScript 基础语法规则，包括大小写敏感性、标识符规则、注释方式、严格模式、关键词与保留字等，并阐述了 ES 函数的基础知识，如函数声明、函数调用、返回值规则等。</description></item><item><title>3.1 语法</title><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/3.4%E6%93%8D%E4%BD%9C%E7%AC%A6/</link><pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/3.4%E6%93%8D%E4%BD%9C%E7%AC%A6/</guid><description>本章详细介绍了 ECMAScript 基础语法规则，包括大小写敏感性、标识符规则、注释方式、严格模式、关键词与保留字等，并阐述了 ES 函数的基础知识，如函数声明、函数调用、返回值规则等。</description></item><item><title>3.2 变量</title><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0302-%E5%8F%98%E9%87%8F/</link><pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0302-%E5%8F%98%E9%87%8F/</guid><description>本章详细介绍了 JavaScript 中变量声明与流控制语句的使用，包括 var、let、const 的核心差异、变量声明最佳实践、流控制语句的分类等。</description></item><item><title>3.3 数据类型</title><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0303-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0303-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>本章详细介绍了 JavaScript 的数据类型，包括简单数据类型和复杂数据类型，以及 typeof 操作符、undefined 类型、null 类型、Boolean 类型、Number 类型、String 类型、Symbol 类型、Object 类型的特性和使用建议。</description></item><item><title>第二章 HTML中的JS</title><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/02-html%E4%B8%AD%E7%9A%84js/</link><pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/02-html%E4%B8%AD%E7%9A%84js/</guid><description>本章详细介绍了 script 元素的使用方式，包括嵌入行内代码和引入外部文件，以及 defer 与 async 属性的使用，以优化脚本执行。同时，还介绍了动态加载脚本、文档模式、noscript 元素等内容。</description></item><item><title>第一章 什么是JS</title><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/01-%E4%BB%80%E4%B9%88%E6%98%AFjs/</link><pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/01-%E4%BB%80%E4%B9%88%E6%98%AFjs/</guid><description>本章详细介绍了 JavaScript 的核心构成，包括 ECMAScript（ES）、文档对象模型（DOM）和浏览器对象模型（BOM），以及 ES 的核心定义与规范内容、ES 版本迭代和 DOM 级别演进。</description></item><item><title/><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/4.1-%E5%8E%9F%E5%A7%8B%E5%80%BC%E4%B8%8E%E5%BC%95%E7%94%A8%E5%80%BC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/4.1-%E5%8E%9F%E5%A7%8B%E5%80%BC%E4%B8%8E%E5%BC%95%E7%94%A8%E5%80%BC/</guid><description>&lt;h2 id="一原始值与引用值">一、原始值与引用值
&lt;a class="header-anchor" href="#%e4%b8%80%e5%8e%9f%e5%a7%8b%e5%80%bc%e4%b8%8e%e5%bc%95%e7%94%a8%e5%80%bc">&lt;/a>
&lt;/h2>&lt;p>ES 变量可包含两种数据类型：原始值和引用值，二者在存储、访问、复制等行为上存在本质差异。&lt;/p>
&lt;h3 id="1-基本定义与访问方式">1. 基本定义与访问方式
&lt;a class="header-anchor" href="#1-%e5%9f%ba%e6%9c%ac%e5%ae%9a%e4%b9%89%e4%b8%8e%e8%ae%bf%e9%97%ae%e6%96%b9%e5%bc%8f">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>原始值&lt;/strong>：最简单的数据，对应 ES 六大基本数据类型（Undefined、Null、Boolean、Number、String、Symbol）。&lt;br>
保存原始值的变量按&lt;strong>值访问&lt;/strong>，操作的是变量中存储的实际值。&lt;/li>
&lt;li>&lt;strong>引用值&lt;/strong>：由多个值构成的对象（如 Object、Array、Function 等）。&lt;br>
引用值保存在内存中，JS 无法直接操作内存空间，实际操作的是对象的&lt;strong>引用（地址）&lt;/strong>，保存引用值的变量按&lt;strong>引用访问&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h3 id="2-动态属性">2. 动态属性
&lt;a class="header-anchor" href="#2-%e5%8a%a8%e6%80%81%e5%b1%9e%e6%80%a7">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>引用值&lt;/strong>：可随时添加、修改、删除其属性和方法，示例：

&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">obj&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">obj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Alice&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 新增属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 修改属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">delete&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">age&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 删除属性
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;/li>
&lt;li>&lt;strong>原始值&lt;/strong>：不能有属性，尝试添加属性不会报错，但属性无法生效，示例：

&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 无报错，但属性不生效
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 仍为 5（字符串原始值的内置 length 属性不受此影响）
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;/li>
&lt;li>&lt;strong>特殊初始化&lt;/strong>：原始类型可通过原始字面量（如 &lt;code>let num = 10&lt;/code>）初始化；若用 &lt;code>new&lt;/code> 关键字（如 &lt;code>let num = new Number(10)&lt;/code>），JS 会创建 &lt;code>Object&lt;/code> 实例，但行为类似原始值。&lt;/li>
&lt;/ul>
&lt;h3 id="3-复制值">3. 复制值
&lt;a class="header-anchor" href="#3-%e5%a4%8d%e5%88%b6%e5%80%bc">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>原始值复制&lt;/strong>：将原始值从一个变量赋给另一个变量时，原始值会被&lt;strong>完整复制&lt;/strong>到新变量，两个变量独立（修改一个不影响另一个），示例：

&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// b 复制 a 的值（10）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 10（a 不受 b 修改影响）
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;/li>
&lt;li>&lt;strong>引用值复制&lt;/strong>：将引用值从一个变量赋给另一个变量时，复制的是&lt;strong>指向堆内存对象的指针&lt;/strong>，两个变量指向同一个对象（修改一个会影响另一个），示例：

&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">obj1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Bob&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">obj2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">obj1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// obj2 复制 obj1 的引用（指向同一对象）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">obj2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Charlie&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">obj1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Charlie（obj1 指向的对象被修改）
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;/li>
&lt;/ul>
&lt;h3 id="4-传递参数">4. 传递参数
&lt;a class="header-anchor" href="#4-%e4%bc%a0%e9%80%92%e5%8f%82%e6%95%b0">&lt;/a>
&lt;/h3>&lt;p>ES 中所有函数的参数均按&lt;strong>值传递&lt;/strong>，即函数外部的值会复制到函数内部的参数（类似变量间的复制）：&lt;/p></description></item><item><title/><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/4.3-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/4.3-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid><description>&lt;h2 id="一垃圾回收基础">一、垃圾回收基础
&lt;a class="header-anchor" href="#%e4%b8%80%e5%9e%83%e5%9c%be%e5%9b%9e%e6%94%b6%e5%9f%ba%e7%a1%80">&lt;/a>
&lt;/h2>&lt;p>JS 是&lt;strong>自动垃圾回收语言&lt;/strong>，执行环境负责代码运行时的内存管理（自动分配内存、回收闲置资源）。核心逻辑是：周期性判断“不再使用的变量”，释放其占用的内存（垃圾回收程序每隔一定时间自动运行）。&lt;/p></description></item><item><title/><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.3-%E9%80%BB%E8%BE%91%E7%AD%89%E4%BB%B7%E4%B8%8E%E6%9D%A1%E4%BB%B6%E5%8F%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.3-%E9%80%BB%E8%BE%91%E7%AD%89%E4%BB%B7%E4%B8%8E%E6%9D%A1%E4%BB%B6%E5%8F%A5/</guid><description>&lt;h2 id="一核心概念界定与区分">一、核心概念界定与区分
&lt;a class="header-anchor" href="#%e4%b8%80%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5%e7%95%8c%e5%ae%9a%e4%b8%8e%e5%8c%ba%e5%88%86">&lt;/a>
&lt;/h2>&lt;p>在逻辑研究中，“等值”与“蕴含”是两类关键关系，但需严格区分“实质”与“逻辑”两个层面——前者依赖语句的实际真值，后者依赖语句的逻辑结构，二者的核心差异在于“真值是否仅由逻辑形式决定”。&lt;/p></description></item><item><title/><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.4-%E6%9C%89%E6%95%88%E6%80%A7%E7%9B%B8%E5%AE%B9%E6%80%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.4-%E6%9C%89%E6%95%88%E6%80%A7%E7%9B%B8%E5%AE%B9%E6%80%A7/</guid><description>&lt;h1 id="语句逻辑中真值表的应用有效性与相容性检验">语句逻辑中真值表的应用：有效性与相容性检验
&lt;a class="header-anchor" href="#%e8%af%ad%e5%8f%a5%e9%80%bb%e8%be%91%e4%b8%ad%e7%9c%9f%e5%80%bc%e8%a1%a8%e7%9a%84%e5%ba%94%e7%94%a8%e6%9c%89%e6%95%88%e6%80%a7%e4%b8%8e%e7%9b%b8%e5%ae%b9%e6%80%a7%e6%a3%80%e9%aa%8c">&lt;/a>
&lt;/h1>&lt;p>在语句逻辑（命题逻辑）中，真值表是分析论证有效性和语句集相容性的核心工具。它通过穷尽所有可能的“解释”（即支语句的真值组合），直观呈现论证或语句集的逻辑特征，帮助我们精准判定其逻辑属性。&lt;/p></description></item><item><title/><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.5-%E7%AE%80%E5%8C%96%E7%9C%9F%E5%80%BC%E8%A1%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.5-%E7%AE%80%E5%8C%96%E7%9C%9F%E5%80%BC%E8%A1%A8/</guid><description>&lt;h1 id="简化真值表方法检验论证无效性与语句集相容性">简化真值表方法：检验论证无效性与语句集相容性
&lt;a class="header-anchor" href="#%e7%ae%80%e5%8c%96%e7%9c%9f%e5%80%bc%e8%a1%a8%e6%96%b9%e6%b3%95%e6%a3%80%e9%aa%8c%e8%ae%ba%e8%af%81%e6%97%a0%e6%95%88%e6%80%a7%e4%b8%8e%e8%af%ad%e5%8f%a5%e9%9b%86%e7%9b%b8%e5%ae%b9%e6%80%a7">&lt;/a>
&lt;/h1>&lt;p>在语句逻辑中，完整真值表虽能精准判定论证有效性和语句集相容性，但当支语句数量较多时（如 4 个支语句需 16 行真值组合），会显得繁琐低效。&lt;strong>简化真值表方法&lt;/strong>通过“目标导向”的真值指派，直接定位关键解释（反例或相容解释），大幅简化推理过程，尤其适用于检验论证无效性和语句集相容性。&lt;/p></description></item><item><title/><link>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.6-%E4%BB%A3%E5%85%A5%E7%89%B9%E4%BE%8B%E7%9C%9F%E5%80%BC%E8%A1%A8%E4%B8%8E%E8%AF%AD%E5%8F%A5%E5%BD%A2%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E9%80%BB%E8%BE%91%E4%B8%8E%E5%93%B2%E5%AD%A6/3.6-%E4%BB%A3%E5%85%A5%E7%89%B9%E4%BE%8B%E7%9C%9F%E5%80%BC%E8%A1%A8%E4%B8%8E%E8%AF%AD%E5%8F%A5%E5%BD%A2%E5%BC%8F/</guid><description>&lt;p>我们把只包含语句变项和语句联结词的表达式，比如p·q叫做语句形式。当然语句形式并不是语句，因而既不真也不假。若用语句表达式，原子语句或复合语句来替换语句中的所有变项，所得出的表达式就是语句。&lt;/p></description></item></channel></rss>
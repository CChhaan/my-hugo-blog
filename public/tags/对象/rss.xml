<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>对象 on 拾光博客 - 永浩</title><link>//localhost:1313/tags/%E5%AF%B9%E8%B1%A1/</link><description>Recent content in 对象 on 拾光博客 - 永浩</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Fri, 25 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1313/tags/%E5%AF%B9%E8%B1%A1/rss.xml" rel="self" type="application/rss+xml"/><item><title>09- 类</title><link>//localhost:1313/post/ts/09--%E7%B1%BB/</link><pubDate>Fri, 25 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/09--%E7%B1%BB/</guid><description>本节详细介绍了 TypeScript 中类的定义、继承、访问修饰符、抽象类等概念，帮助读者更好地理解和使用 TypeScript 的面向对象编程。</description></item><item><title>05- 对象类型</title><link>//localhost:1313/post/ts/05--%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/ts/05--%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/</guid><description>本节详细介绍了 TypeScript 中对象类型的基本定义、属性特性、索引签名、交叉类型、泛型对象、ReadonlyArray 和元组类型等概念，帮助读者深入理解 TypeScript 的对象类型系统。</description></item><item><title>3.3节 原生函数</title><link>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0303--%E5%8E%9F%E7%94%9F%E5%87%BD%E6%95%B0/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84js-%E4%B8%AD%E5%8D%B7/0303--%E5%8E%9F%E7%94%9F%E5%87%BD%E6%95%B0/</guid><description>本节详细介绍了 JavaScript 中原生函数的概念、分类、封装对象、原型以及 Symbol 和 Error 对象的使用方法。</description></item><item><title>3.3 数据类型</title><link>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0303-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate><guid>//localhost:1313/post/js%E7%BA%A2%E5%AE%9D%E4%B9%A6/0303-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>本章详细介绍了 JavaScript 的数据类型，包括简单数据类型和复杂数据类型，以及 typeof 操作符、undefined 类型、null 类型、Boolean 类型、Number 类型、String 类型、Symbol 类型、Object 类型的特性和使用建议。</description></item></channel></rss>